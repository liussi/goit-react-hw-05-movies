{"version":3,"file":"static/js/170.af41b3ad.chunk.js","mappings":"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","sources":["api/api.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst LinkContainer = styled.div`\nmargin-top: 20px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #333;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\n\nconst Wrapper = styled.div`\n  margin-top: 20px;\n  background: #ffffff;\n  color: #333;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst LinkButton = styled(Link)`\nmargin-top: 20px;\n  color: #0a0e11; \n  text-decoration: none; \n  text-align: center;\n  cursor: pointer; \n  &:hover {\n    color: #0056b3; \n  }\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  \n`;\n\nconst Image = styled.img`\nmargin-right: 20px;\n  width: 400px;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\nconst Text = styled.p`\n  font-weight: bold;\n`;\n\nconst Span = styled.span`\n  font-weight: normal;\n`;\n\nexport {\n  Wrapper,\n  Span,\n  Text,\n  Image,\n  InfoContainer,\n  Container,\n  LinkButton,\n  LinkContainer,\n};","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieData } from '../../api/api';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport {\n  Image,\n  InfoContainer,\n  Container,\n  LinkButton,\n  Text,\n  Span,\n  Wrapper,\n  LinkContainer,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const location = useLocation();\n  const urlImg = 'https://image.tmdb.org/t/p/w500';\n  const backLinckLocation = useRef(location.state);\n\n  const getFilmById = filmId => {\n    return movieData.find(film => film.id === filmId);\n  };\n\n  useEffect(() => {\n    fetchMovieData(movieId)\n      .then(data => {\n        setMovieData(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  const { title, poster_path, backdrop_path, popularity, overview } = movieData;\n\n  return (\n    <div>\n      <LinkContainer>\n        <IconContext.Provider value={{ size: '0.8em' }}>\n          <LinkButton to={backLinckLocation.current}>\n            <FaArrowLeft /> Go back\n          </LinkButton>\n        </IconContext.Provider>\n      </LinkContainer>\n      <Container key={getFilmById.id}>\n        <Image\n          src={`${urlImg}${poster_path || backdrop_path}`}\n          width={120}\n          height={120}\n          alt={title}\n        />\n        <InfoContainer>\n          <h2>{title}</h2>\n          <Text>\n            User Score: <Span>{Math.floor(popularity)}%</Span>\n          </Text>\n          <Text>Overview</Text>\n          <Span>{overview}</Span>\n          <Text>Genres </Text>\n          {movieData.genres && movieData.genres.length > 0 && (\n            <Span>{movieData.genres.map(genre => genre.name).join(', ')}</Span>\n          )}\n        </InfoContainer>\n      </Container>\n      <Wrapper>\n        <h2>Additional information</h2>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </Wrapper>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","fetchPopularFilms","axios","response","data","results","console","error","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","LinkContainer","styled","Container","Wrapper","LinkButton","Link","InfoContainer","Image","Text","Span","useParams","useState","movieData","setMovieData","location","useLocation","backLinckLocation","useRef","state","useEffect","then","catch","title","poster_path","backdrop_path","popularity","overview","value","size","to","current","src","width","height","alt","Math","floor","genres","length","map","genre","name","join","filmId","find","film","id"],"sourceRoot":""}
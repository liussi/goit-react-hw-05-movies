{"version":3,"file":"static/js/246.fee81efa.chunk.js","mappings":"kTAGMA,EAAU,+BAGVC,EAAa,CACjBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OALF,yNASR,SAAgBC,IAAvB,4CAAQ,OAAR,oBAAQ,6GAEmBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,qBAAyCC,GAF5D,cAEEM,EAFF,yBAGGA,EAASC,KAAKC,SAHjB,uCAKJC,QAAQC,MAAR,MALI,kBAMG,IANH,gFAUD,SAAgBC,EAAvB,+CAAQ,OAAR,oBAAQ,WAAyBC,GAAzB,gGAEmBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,EADC,YAErBZ,GAJE,cAEEM,EAFF,yBAMGA,EAASC,KAAKM,MANjB,uCAQJJ,QAAQC,MAAR,MARI,kBASG,IATH,gFAaD,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,EADC,YAErBZ,GAJC,cAEGM,EAFH,yBAMIA,EAASC,KAAKC,SANlB,uCAQHC,QAAQC,MAAR,MARG,kBASI,IATJ,gFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,GACpBZ,GAJC,cAEGM,EAFH,yBAMIA,EAASC,MANb,uCAQHE,QAAQC,MAAR,MARG,kBASI,IATJ,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBZ,EAAAA,EAAAA,IAAA,UAClBN,EADkB,+BACYkB,EADZ,8CAErBjB,GAJC,cAEGM,EAFH,yBAMIA,EAASC,KAAKC,SANlB,uCAQHC,QAAQC,MAAR,MARG,kBASI,IATJ,gF,uIC7DDQ,EAAgBC,EAAAA,EAAAA,GAAH,+DAKbC,EAAmBD,EAAAA,EAAAA,EAAH,4D,SC4BtB,EA9BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAWR,OATAa,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaF,GACVc,MAAK,SAAAnB,GACJgB,EAAWhB,EACZ,IACAoB,OAAM,SAAAjB,GACLD,QAAQC,MAAMA,EACf,GACJ,GAAE,CAACE,KAEF,0BACE,wBACGU,EAAQM,OAAS,EAChBN,EAAQO,KAAI,SAACC,EAAQC,GAAT,OACV,2BACE,UAACb,EAAD,WAAe,YAAUY,EAAOA,WAChC,SAACV,EAAD,UAAmBU,EAAOE,YAFnBD,EADC,KAOZ,uBAAG,+CAKZ,C","sources":["api/api.jsx","components/Reviews/Revievs.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\n\nconst AuthorHeading = styled.h3`\n  font-size: 1.2rem;\n  color: #333; \n`;\n\nconst ContentParagraph = styled.p`\n  font-size: 1rem;\n  color: #666;\n`;\n\nexport { AuthorHeading, ContentParagraph };","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../api/api';\nimport {ContentParagraph,AuthorHeading} from './Revievs.styled'\n\nconst Reviews = () => {\n  const [rewiews, setRewiews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        setRewiews(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {rewiews.length > 0 ? (\n          rewiews.map((author, index) => (\n            <li key={index}>\n              <AuthorHeading>Author : {author.author}</AuthorHeading>\n              <ContentParagraph>{author.content}</ContentParagraph>\n            </li>\n          ))\n        ) : (\n          <p>We dont have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","fetchPopularFilms","axios","response","data","results","console","error","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","AuthorHeading","styled","ContentParagraph","useState","rewiews","setRewiews","useParams","useEffect","then","catch","length","map","author","index","content"],"sourceRoot":""}
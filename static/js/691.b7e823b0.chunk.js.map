{"version":3,"file":"static/js/691.b7e823b0.chunk.js","mappings":"kTAGMA,EAAU,+BAGVC,EAAa,CACjBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OALF,yNASR,SAAgBC,IAAvB,4CAAQ,OAAR,oBAAQ,6GAEmBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,qBAAyCC,GAF5D,cAEEM,EAFF,yBAGGA,EAASC,KAAKC,SAHjB,uCAKJC,QAAQC,MAAR,MALI,kBAMG,IANH,gFAUD,SAAgBC,EAAvB,+CAAQ,OAAR,oBAAQ,WAAyBC,GAAzB,gGAEmBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,EADC,YAErBZ,GAJE,cAEEM,EAFF,yBAMGA,EAASC,KAAKM,MANjB,uCAQJJ,QAAQC,MAAR,MARI,kBASG,IATH,gFAaD,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,EADC,YAErBZ,GAJC,cAEGM,EAFH,yBAMIA,EAASC,KAAKC,SANlB,uCAQHC,QAAQC,MAAR,MARG,kBASI,IATJ,gFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACDa,GACpBZ,GAJC,cAEGM,EAFH,yBAMIA,EAASC,MANb,uCAQHE,QAAQC,MAAR,MARG,kBASI,IATJ,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBZ,EAAAA,EAAAA,IAAA,UAClBN,EADkB,+BACYkB,EADZ,8CAErBjB,GAJC,cAEGM,EAFH,yBAMIA,EAASC,KAAKC,SANlB,uCAQHC,QAAQC,MAAR,MARG,kBASI,IATJ,gF,mJC5DDQ,EAAYC,EAAAA,EAAAA,IAAH,+DAKTC,EAAaD,EAAAA,EAAAA,KAAH,2jBAmCVE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,sL,SCgBd,EAtDe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAWF,EAAYG,IAAI,YACjC,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAbAC,EAAAA,EAAAA,YAAU,WACHN,IAELZ,EAAAA,EAAAA,IAAkBY,GACfO,MAAK,SAAA5B,GACJiB,EAAUjB,GACVE,QAAQ2B,IAAI7B,EACb,IACA8B,OAAM,SAAA3B,GACLD,QAAQC,MAAMA,EACf,GACJ,GAAE,CAACkB,KAGF,UAACV,EAAD,YACE,UAACE,EAAD,CAAYkB,SAxBK,SAAAC,GACnBA,EAAEC,iBAGEb,EADJG,EACoB,CAAEF,SAAUE,GACZ,CAAC,GACrBC,EAAc,GACf,EAiBG,WACE,4BACE,sBACA,kBACEU,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAAAJ,GAAC,OAAIR,EAAcQ,EAAEK,OAAOF,MAA3B,QAGf,mBAAQD,KAAK,SAAb,SAAsB,cAEvBxB,GACCA,EAAO4B,KAAI,SAAAC,GAAK,OACd,yBACE,SAACzB,EAAD,CAAU0B,GAAE,kBAAaD,EAAME,GAAGC,YAAcC,MAAOlB,EAAvD,SACGc,EAAMK,SAFFL,EAAME,GADD,KAOlB,SAAC,KAAD,MAGL,C","sources":["api/api.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  max-width: 800px;\n  padding: 20px;\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-left: 30px;\n\n  label {\n    font-size: 1.2rem;\n    margin-right: 10px;\n  }\n\n  input {\n    flex: 1;\n    padding: 10px;\n    font-size: 1rem;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n\n  button {\n    background-color: #67727e;\n    color: #fff;\n    font-size: 1rem;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #0056b3;\n    }\n  }\n`;\n\nconst FilmLink = styled(Link)`\n  display: block;\n  font-size: 1.2rem;\n  color: #007bff;\n  text-decoration: none;\n  margin: 10px 0;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nexport { FilmLink, SearchForm, Container };","import { useEffect, useState} from 'react';\nimport { Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from '../../api/api';\nimport {  SearchForm, Container, FilmLink } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [serchParams, setSearchParams] = useSearchParams();\n  const moviesId = serchParams.get('moviesId');\n  const [searchTerm, setSearchTerm] = useState('');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    searchTerm\n      ? setSearchParams({ moviesId: searchTerm })\n      : setSearchParams({});\n    setSearchTerm('');\n  };\n\n  useEffect(() => {\n    if (!moviesId) return;\n\n    fetchSearchMovies(moviesId)\n      .then(data => {\n        setMovies(data);\n        console.log(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [moviesId]);\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit}>\n        <div>\n          <label></label>\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Search</button>\n      </SearchForm>\n      {movies &&\n        movies.map(movie => (\n          <ul key={movie.id}>\n            <FilmLink to={`/movies/${movie.id.toString()}`} state={location}>\n              {movie.title}\n            </FilmLink>\n          </ul>\n        ))}\n      <Outlet />\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","fetchPopularFilms","axios","response","data","results","console","error","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","Container","styled","SearchForm","FilmLink","Link","useState","setMovies","useSearchParams","serchParams","setSearchParams","moviesId","get","searchTerm","setSearchTerm","location","useLocation","useEffect","then","log","catch","onSubmit","e","preventDefault","type","value","onChange","target","map","movie","to","id","toString","state","title"],"sourceRoot":""}